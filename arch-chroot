#!/bin/zsh

modprobe efivars
set -k
source arch-config
pacman -S --noconfirm ntp 



hostname $HOSTNAME
echo ${HOSTNAME} > /etc/hostname





sed -i 's/#sl_SI/sl_SI/' /etc/locale.gen
sed -i 's/#en_US/en_US/' /etc/locale.gen
sed -i 's/#en_GB/en_GB/' /etc/locale.gen
locale-gen






echo LANG=en_US.UTF-8 > /etc/locale.conf
export LANG=en_US.UTF-8

echo KEYMAP=us > /etc/vconsole.conf
sed -i '$ a FONT=' /etc/vconsole.conf
sed -i '$ a FONT_MAP=' /etc/vconsole.conf






ln -s /usr/share/zoneinfo/Europe/Ljubljana /etc/localtime
ntpd -qg
hwclock --systohc --utc







pacman -Syy
pacman -S --noconfirm bash-completion vim sudo efibootmgr git openssh dosfstools wget htop
sed -i 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/' /etc/sudoers





mkinitcpio -p linux

if [[ $BIOS = "bios" ]]; then
	pacman -S --noconfirm grub-bios
	grub-install --recheck /dev/sda
else
	pacman -S --noconfirm grub-efi-x86_64
	grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch_grub --recheck --debug
fi

mkdir -p /boot/grub/locale
cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo

grub-mkconfig -o /boot/grub/grub.cfg










useradd -m -g users -G wheel,storage,power -s /bin/bash $NEWUSERNAME
echo "$NEWUSERNAME\n\n\n\n" | chfn $NEWUSERNAME

echo "${USERPASS}\n${USERPASS}" | passwd $NEWUSERNAME
echo "${ROOTPASS}\n${ROOTPASS}" | passwd root

systemctl enable sshd.service







pacman -S --noconfirm alsa-utils
pacman -S --noconfirm xorg-server xorg-xinit xorg-server-utils
pacman -S --noconfirm mesa

if [[ $VBOX = "vbox" ]]; then
	pacman -S --noconfirm virtualbox-guest-utils
	modprobe -a vboxguest vboxsf vboxvideo
	echo 'vboxguest\nvboxsf\nvboxvideo' > /etc/modules-load.d/virtualbox.conf
else
	pacman -S --noconfirm xf86-video-nouveau 
	# pacman -S --noconfirm nvidia 
fi







cd /tmp
wget https://aur.archlinux.org/packages/au/aurget/aurget.tar.gz
tar -xpvf aurget.tar.gz
cd aurget
makepkg -i --asroot --noconfirm






pacman -S --noconfirm gnome gnome-extra 
pacman -S --noconfirm $(pacman -Ssq ttf)

systemctl enable gdm.service

pacman -S --noconfirm  networkmanager network-manager-applet
systemctl enable NetworkManager.service 


sed -i "s/\[daemon\]/\# Enable automatic login for user\n\[daemon\]\nAutomaticLogin=${NEWUSERNAME}\nAutomaticLoginEnable=True/g" /etc/gdm/custom.conf








pacman -S --noconfirm  virtualbox terminator nginx blender gimp meld gitg smartmontools firefox rsync qt4 sbt scala python2 ipython2 vlc pidgin

pacman -R --noconfirm epiphany empathy gnome-chess gnome-mines gnome-sudoku gnome-tetravex gnome-robots gnome-klotski gnome-nibbles








echo 'vboxdrv' >> /etc/modules-load.d/virtualbox.conf
mkdir /home/VirtualBox
chown ${NEWUSERNAME}:users /home/VirtualBox
groupadd nopasswdlogin
usermod -a -G nopasswdlogin $NEWUSERNAME
usermod -a -G vboxusers $NEWUSERNAME


su $NEWUSERNAME
vboxmanage setproperty machinefolder /home/VirtualBox/

echo $NEWUSERNAME



mkdir /var/log/nohub
chown ${NEWUSERNAME}:users /var/log/nohub
cp -r /root/arch/startVbox /home/${NEWUSERNAME}/.StartVBox
chmod 755 /home/${NEWUSERNAME}/.StartVBox
mkdir /home/${NEWUSERNAME}/.config/
cp -r /root/arch/startVbox.desktop /home/${NEWUSERNAME}/.config/






mv /etc/nginx/nginx.conf{,.old}
cp -r /root/arch/etc/nginx /etc/
systemctl enable nginx.service 







mv /etc/ssh/sshd_config{,.old}
cp /root/arch/sshd_config /etc/ssh/sshd_config
systemctl enable sshd.service 



#do this manually for othel interfaces
#source /root/arch/iptables.conf
#iptables-save > /etc/iptables/iptables.rules

cp /root/arch/iptables.rules /etc/iptables/iptables.rules




