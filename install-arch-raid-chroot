#!/bin/zsh

pacman -S --noconfirm ntp 

#copy this down in chroot
HOSTNAME=thing
BIOS=bios #efi or bios
NEWUSERNAME=zidar
VBOX=vbox


modprobe raid1
modprobe raid5
modprobe dm-mod

sed -i 's/MODULES=""/MODULES="dm_mod raid1 raid5"/' /etc/mkinitcpio.conf
sed -i 's/udev/udev mdadm_udev/' /etc/mkinitcpio.conf
sed -i 's/filesystems/lvm2 filesystems/' /etc/mkinitcpio.conf


mdadm --examine --scan > /etc/mdadm.conf


sed -i 's/#sl_SI/sl_SI/' /etc/locale.gen
sed -i 's/#en_US/en_US/' /etc/locale.gen
sed -i 's/#en_GB/en_GB/' /etc/locale.gen
locale-gen



echo LANG=en_US.UTF-8 > /etc/locale.conf
export LANG=en_US.UTF-8

echo KEYMAP=us > /etc/vconsole.conf
sed -i '$ a FONT=' /etc/vconsole.conf
sed -i '$ a FONT_MAP=' /etc/vconsole.conf



ln -s /usr/share/zoneinfo/Europe/Ljubljana /etc/localtime

ntpd -qg
hwclock --systohc --utc


echo ${HOSTNAME} > /etc/hostname


#pacman-key --init
#pacman-key --populate archlinux 
pacman -Syy

pacman -S --noconfirm bash-completion vim sudo git openssh wget

# this is horrible
sed -i 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/' /etc/sudoers


mkinitcpio -p linux


if [[ $BIOS = "efi" ]]; then
	# bios systems
	pacman -S --noconfirm grub-bios
	grub-install --recheck /dev/sda
else
	# uefi systems
	# ioreg -l -p IODeviceTree | grep firmware-abi
	pacman -S --noconfirm grub-efi-x86_64
	grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch_grub --recheck --debug
fi

mkdir -p /boot/grub/locale
cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo

grub-mkconfig -o /boot/grub/grub.cfg




useradd -m -g users -G wheel,storage,power -s /bin/bash $NEWUSERNAME
echo "$NEWUSERNAME\n\n\n\n" | chfn $NEWUSERNAME


echo "nnn\nnnn" | passwd root
echo "nnn\nnnn" | passwd $NEWUSERNAME



systemctl enable sshd.service
#systemctl enable dhcpc.service
systemctl enable lvm-monitoring.service




#############################################
#############################################
#############################################
#############################################
#############################################



pacman -S --noconfirm alsa-utils
pacman -S --noconfirm xorg-server xorg-xinit xorg-server-utils
pacman -S --noconfirm mesa

if [[ $VBOX = "vbox" ]]; then
	pacman -S virtualbox-guest-utils
	modprobe -a vboxguest vboxsf vboxvideo
	echo 'vboxguest\nvboxsf\nvboxvideo' > /etc/modules-load.d/virtualbox.conf
else
	# assuming nvidia graphics, because all else is evil
	pacman -S --noconfirm xf86-video-nouveau 
fi

su $NEWUSERNAME


cd /tmp
wget https://aur.archlinux.org/packages/au/aurget/aurget.tar.gz
tar -xpvf aurget.tar.gz
cd aurget
makepkg -i

sudo pacman -S --noconfirm  ttf-dejavu gnome gnome-extra 
sudo pacman -S --noconfirm  network-manager-applet

sudo systemctl enable gdm.service



