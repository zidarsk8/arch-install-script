#!/bin/zsh

set -k
#set -o nounset

DIRNAME=$(dirname $0)

if [[ -d "/sys/firmware/efi" ]]; then
    echo "using uefi boot"
    BIOS="efi"
else 
    echo "using normal bios boot"
    BIOS="bios"
fi

if [[ $BIOS == "efi" ]]; then
	modprobe efivars
fi


if [[ $BIOS == "efi" ]]; then
	BOOT_PART=ef00
else
	BOOT_PART=ef02
fi


[[ -a arch-config ]] || cd /root/arch
[[ -a arch-config ]] || { echo "no config found" ; exit }



echo "starting arch install script"

source arch-config
source functions.sh


install_yaourt


yaourt -S --noconfirm bcache-tools



clear_disk sda $CLEAR_BLOCKS
clear_disk sdb $CLEAR_BLOCKS


echo "o\ny\nn\n\n\n+128M\n${BOOT_PART}\nn\n\n\n+512M\n\nn\n\n\n+${SWAP_SIZE}\n8200\nn\n\n\n+${BCACHE_SIZE}\n\nn\n\n\n\n\np\nw\ny\n" | gdisk /dev/sda


echo "o\ny\nn\n\n\n\n\np\nw\ny\n" | gdisk /dev/sdb


make-bcache -B /dev/sdb1 -C /dev/sda4

sleep 3

echo writeback > /sys/block/bcache0/bcache/cache_mode


mkfs.btrfs -L root -f -d single /dev/bcache0 /dev/sda5

mkfs.ext4 -L boot /dev/sda2

mkswap -L swap /dev/sda3 

swapon /dev/sda3

mount /dev/bcache0 /mnt/


btrfs subvolume create /mnt/home
mount -o subvol=home /dev/bcache0 /mnt/home

btrfs subvolume create /mnt/home/VirtualBox
mount -o subvol=home/VirtualBox /dev/bcache0 /mnt/home/VirtualBox

btrfs subvolume create /mnt/var
mount -o subvol=var /dev/bcache0 /mnt/var

mkdir /mnt/boot
mount /dev/sda2 /mnt/boot


pacstrap /mnt base base-devel zsh    

genfstab -U -p /mnt >> /mnt/etc/fstab

cat !$

cp -r /root/arch /mnt/root/

arch-chroot /mnt

zsh
set -k


umount /mnt/boot
umount /dev/bcache0
umount /dev/bcache0
umount /dev/bcache0
umount /dev/bcache0


