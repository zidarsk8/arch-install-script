#!/bin/zsh


		# Virtual Machine with 5 or more hard drives 
		# 
		# start live usb
		# pacman-key --init && pacman-key --populate archlinux 
		# pacman -Syy
		# pacman -S pacman
		# pacman -S openssh
		# systemctl enable sshd.service
		# systemctl start sshd.service
		# passwd


		#todo ... ntp ... hw ...

DRIVES=abcde
DRIVESARR=(a b c d e)

#copy this down in chroot
HOSTNAME=thing
BIOS=bios #efi or bios

SWAPSIZE=2G
ROOTSIZE=10G




modprobe raid1
modprobe raid5
modprobe dm-mod


	##dmsetup remove_all
	##mdadm -S /dev/md0
	##mdadm -S /dev/md1
	##mdadm --zero-superblock /dev/sd[abcd]2
	##mdadm --zero-superblock /dev/sd[abcd]3
	##dd if=/dev/zero of=/dev/sdb bs=1M 
	##dd if=/dev/zero of=/dev/sdc bs=1M 
	##dd if=/dev/zero of=/dev/sdd bs=1M 
	#for i in ${DRIVESARR[*]}
	#do
	#	dd if=/dev/zero of=/dev/sd${i} bs=1M 
	#done





	#####
	# 1 - ef00 for efi systems, ef02 on bios systems with gpt
	# 2 - /boot can't be in raid5 array
	# 3 - everything else will be on the lvm on top of raid5
	#####

if [[ $BIOS = "efi" ]]; then
	echo "o\ny\nn\n\n\n+100M\nef00\nn\n\n\n+100M\nfd00\nn\n\n\n-50M\nfd00\np\nw\ny\n" | gdisk /dev/sd$DRIVESARR[1]
else
	echo "o\ny\nn\n\n\n+100M\nef02\nn\n\n\n+100M\nfd00\nn\n\n\n-50M\nfd00\np\nw\ny\n" | gdisk /dev/sd$DRIVESARR[1]
fi

	# copy partition table to other hard drives

sgdisk --backup=table /dev/sda
for i in ${DRIVESARR[*]}
do
	sgdisk --load-backup=table /dev/sd${i} 
done


mdadm --create /dev/md0 --level=1 --raid-devices=${#DRIVES} --metadata=1.0 /dev/sd[${DRIVES}]2
mdadm --create /dev/md1 --level=5 --raid-devices=${#DRIVES} /dev/sd[${DRIVES}]3

	# monitor 
	# watch -n 1 cat /proc/mdstat


	# for checking raid array run the following as super user:
	# echo check >> /sys/block/mdX/md/sync_action
	#
	# monitor the process:
	# watch -n 1 cat /proc/mdstat
	#
	# stop the check with:
	# echo idle >> /sys/block/mdX/md/sync_action



pvcreate /dev/md0
pvcreate /dev/md1
pvdisplay

vgcreate VolBootArray /dev/md0
vgcreate VolMainArray /dev/md1
vgdisplay


lvcreate -l +100%FREE VolBootArray -n lvboot

lvcreate -C y -L ${SWAPSIZE} VolMainArray -n lvswap
lvcreate -L      ${ROOTSIZE} VolMainArray -n lvroot
lvcreate -l      +100%FREE   VolMainArray -n lvhome
lvdisplay



for i in ${DRIVESARR[*]}
do
	mkfs.vfat -F 32 /dev/sd${i}1
done

mkfs.ext2 -L boot /dev/mapper/VolBootArray-lvboot
mkfs.ext4 -L root /dev/mapper/VolMainArray-lvroot
mkfs.ext4 -L home /dev/mapper/VolMainArray-lvhome
mkswap -L swap /dev/mapper/VolMainArray-lvswap
swapon /dev/mapper/VolMainArray-lvswap



mount /dev/mapper/VolMainArray-lvroot /mnt
mkdir /mnt/home 
mount /dev/mapper/VolMainArray-lvhome /mnt/home
mkdir /mnt/boot
mount  /dev/mapper/VolBootArray-lvboot /mnt/boot
mkdir /mnt/boot/efi
mount /dev/sda1 /mnt/boot/efi


pacstrap /mnt base base-devel zsh

genfstab -U -p /mnt >> /mnt/etc/fstab

cp install-arch-raid-chroot /mnt/
chmod 755 /mnt/install-arch-raid-chroot


arch-chroot /mnt /install-arch-raid-chroot



